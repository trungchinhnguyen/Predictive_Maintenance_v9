{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";/** */ /*global BigInt */ /*global BigInt64Array */import{loadTokenizer}from'./bert_tokenizer.ts';import*as wasmFeatureDetect from'wasm-feature-detect';//Setup onnxruntime \nvar ort=require('onnxruntime-web');//requires Cross-Origin-*-policy headers https://web.dev/coop-coep/\n/**\nconst simdResolver = wasmFeatureDetect.simd().then(simdSupported => {\n    console.log(\"simd is supported? \"+ simdSupported);\n    if (simdSupported) {\n      ort.env.wasm.numThreads = 3; \n      ort.env.wasm.simd = true;\n    } else {\n      ort.env.wasm.numThreads = 1; \n      ort.env.wasm.simd = false;\n    }\n});\n*/var options={executionProviders:['wasm'],graphOptimizationLevel:'all'};var downLoadingModel=true;// const model = \"./xtremedistill-go-emotion-int8.onnx\";\nvar model=\"./classifier_dummy_in8.onnx\";var session=ort.InferenceSession.create(model,options);session.then(function(t){downLoadingModel=false;//warmup the VM\nfor(var i=0;i<10;i++){console.log(\"Inference warmup \"+i);lm_inference(\"this is a warmup inference\");}});var tokenizer=loadTokenizer();var EMOJI_DEFAULT_DISPLAY=[// [\"Emotion\", \"Score\"],\n// ['admiration 👏',0],\n// ['amusement 😂', 0],\n// ['neutral 😐',0],\n// ['approval 👍',0],\n// ['joy 😃',0],\n// ['gratitude 🙏',0],\n[\"Status\",\"Score\"],['false 👍',0],['true 👎',0]//   [0,0],\n//   [1,0],\n];var EMOJIS=[// 'admiration 👏',\n// 'amusement 😂',\n// 'anger 😡',\n// 'annoyance 😒',\n// 'approval 👍',\n// 'caring 🤗',\n// 'confusion 😕',\n// 'curiosity 🤔',\n// 'desire 😍',\n// 'disappointment 😞',\n// 'disapproval 👎',\n// 'disgust 🤮',\n// 'embarrassment 😳',\n// 'excitement 🤩',\n// 'fear 😨',\n// 'gratitude 🙏',\n// 'grief 😢',\n// 'joy 😃',\n// 'love ❤️',\n// 'nervousness 😬',\n// 'optimism 🤞',\n// 'pride 😌',\n// 'realization 💡',\n// 'relief😅',\n// 'remorse 😞', \n// 'sadness 😞',\n// 'surprise 😲',\n// 'neutral 😐'\n'false 👍','true 👎'// 0,\n// 1\n];function isDownloading(){return downLoadingModel;}function sortResult(a,b){if(a[1]===b[1]){return 0;}else{return a[1]<b[1]?1:-1;}}function sigmoid(t){return 1/(1+Math.pow(Math.E,-t));}function create_model_input(encoded){var input_ids=new Array(encoded.length+2);var attention_mask=new Array(encoded.length+2);var token_type_ids=new Array(encoded.length+2);input_ids[0]=BigInt(101);attention_mask[0]=BigInt(1);token_type_ids[0]=BigInt(0);var i=0;for(;i<encoded.length;i++){input_ids[i+1]=BigInt(encoded[i]);attention_mask[i+1]=BigInt(1);token_type_ids[i+1]=BigInt(0);}input_ids[i+1]=BigInt(102);attention_mask[i+1]=BigInt(1);token_type_ids[i+1]=BigInt(0);var sequence_length=input_ids.length;// input_ids = new ort.Tensor('int64', BigInt64Array.from(input_ids), [1,sequence_length]);\n// attention_mask = new ort.Tensor('int64', BigInt64Array.from(attention_mask), [1,sequence_length]);\n// token_type_ids = new ort.Tensor('int64', BigInt64Array.from(token_type_ids), [1,sequence_length]);\ninput_ids=new ort.Tensor('int32',BigInt32Array.from(input_ids),[1,sequence_length]);attention_mask=new ort.Tensor('int8',BigInt8Array.from(attention_mask),[1,sequence_length]);token_type_ids=new ort.Tensor('int8',BigInt8Array.from(token_type_ids),[1,sequence_length]);return{input_ids:input_ids,attention_mask:attention_mask,token_type_ids:token_type_ids};}function lm_inference(_x){return _lm_inference.apply(this,arguments);}function _lm_inference(){_lm_inference=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(text){var encoded_ids,start,model_input,output,duration,probs,result,i,t,result_list;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return tokenizer.then(function(t){return t.tokenize(text);});case 3:encoded_ids=_context.sent;if(!(encoded_ids.length===0)){_context.next=6;break;}return _context.abrupt(\"return\",[0.0,EMOJI_DEFAULT_DISPLAY]);case 6:start=performance.now();model_input=create_model_input(encoded_ids);_context.next=10;return session.then(function(s){return s.run(model_input,['output_0']);});case 10:output=_context.sent;duration=(performance.now()-start).toFixed(1);probs=output['output_0'].data.map(sigmoid).map(function(t){return Math.floor(t*100);});// const probs = output['output_0'][0].data.map(sigmoid).map( t => Math.floor(t*100));\nresult=[];for(i=0;i<EMOJIS.length;i++){t=[EMOJIS[i],probs[i]];result[i]=t;}result.sort(sortResult);result_list=[];result_list[0]=[\"Status\",\"Score\"];// for(i = 0; i < 6; i++) {\nfor(i=0;i<2;i++){result_list[i+1]=result[i];}return _context.abrupt(\"return\",[duration,result_list]);case 22:_context.prev=22;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",[0.0,EMOJI_DEFAULT_DISPLAY]);case 25:case\"end\":return _context.stop();}}},_callee,null,[[0,22]]);}));return _lm_inference.apply(this,arguments);}export var inference=lm_inference;export var columnNames=EMOJI_DEFAULT_DISPLAY;export var modelDownloadInProgress=isDownloading;","map":{"version":3,"names":["loadTokenizer","wasmFeatureDetect","ort","require","options","executionProviders","graphOptimizationLevel","downLoadingModel","model","session","InferenceSession","create","then","t","i","console","log","lm_inference","tokenizer","EMOJI_DEFAULT_DISPLAY","EMOJIS","isDownloading","sortResult","a","b","sigmoid","Math","pow","E","create_model_input","encoded","input_ids","Array","length","attention_mask","token_type_ids","BigInt","sequence_length","Tensor","BigInt32Array","from","BigInt8Array","text","tokenize","encoded_ids","start","performance","now","model_input","s","run","output","duration","toFixed","probs","data","map","floor","result","sort","result_list","inference","columnNames","modelDownloadInProgress"],"sources":["/Users/nguyentrungchinh/project_19/src/inference.js"],"sourcesContent":["/** */\n/*global BigInt */\n/*global BigInt64Array */\n\nimport { loadTokenizer } from './bert_tokenizer.ts';\nimport * as wasmFeatureDetect from 'wasm-feature-detect';\n\n//Setup onnxruntime \nconst ort = require('onnxruntime-web');\n\n//requires Cross-Origin-*-policy headers https://web.dev/coop-coep/\n/**\nconst simdResolver = wasmFeatureDetect.simd().then(simdSupported => {\n    console.log(\"simd is supported? \"+ simdSupported);\n    if (simdSupported) {\n      ort.env.wasm.numThreads = 3; \n      ort.env.wasm.simd = true;\n    } else {\n      ort.env.wasm.numThreads = 1; \n      ort.env.wasm.simd = false;\n    }\n});\n*/\n\nconst options = {\n  executionProviders: ['wasm'], \n  graphOptimizationLevel: 'all'\n};\n\nvar downLoadingModel = true;\n// const model = \"./xtremedistill-go-emotion-int8.onnx\";\nconst model = \"./classifier_dummy_in8.onnx\";\n\nconst session = ort.InferenceSession.create(model, options);\nsession.then(t => { \n  downLoadingModel = false;\n  //warmup the VM\n  for(var i = 0; i < 10; i++) {\n    console.log(\"Inference warmup \" + i);\n    lm_inference(\"this is a warmup inference\");\n  }\n});\n\nconst tokenizer = loadTokenizer()\n\nconst EMOJI_DEFAULT_DISPLAY = [\n  // [\"Emotion\", \"Score\"],\n  // ['admiration 👏',0],\n  // ['amusement 😂', 0],\n  // ['neutral 😐',0],\n  // ['approval 👍',0],\n  // ['joy 😃',0],\n  // ['gratitude 🙏',0],\n  [\"Status\", \"Score\"],\n  ['false 👍',0],\n  ['true 👎',0],\n//   [0,0],\n//   [1,0],\n];\n\nconst EMOJIS = [\n  // 'admiration 👏',\n  // 'amusement 😂',\n  // 'anger 😡',\n  // 'annoyance 😒',\n  // 'approval 👍',\n  // 'caring 🤗',\n  // 'confusion 😕',\n  // 'curiosity 🤔',\n  // 'desire 😍',\n  // 'disappointment 😞',\n  // 'disapproval 👎',\n  // 'disgust 🤮',\n  // 'embarrassment 😳',\n  // 'excitement 🤩',\n  // 'fear 😨',\n  // 'gratitude 🙏',\n  // 'grief 😢',\n  // 'joy 😃',\n  // 'love ❤️',\n  // 'nervousness 😬',\n  // 'optimism 🤞',\n  // 'pride 😌',\n  // 'realization 💡',\n  // 'relief😅',\n  // 'remorse 😞', \n  // 'sadness 😞',\n  // 'surprise 😲',\n  // 'neutral 😐'\n  'false 👍',\n  'true 👎'\n  // 0,\n  // 1\n];\n\nfunction isDownloading() {\n  return downLoadingModel;\n}\n\nfunction sortResult(a, b) {\n  if (a[1] === b[1]) {\n      return 0;\n  }\n  else {\n      return (a[1] < b[1]) ? 1 : -1;\n  }\n}\n\nfunction sigmoid(t) {\n  return 1/(1+Math.pow(Math.E, -t));\n}\n\nfunction create_model_input(encoded) {\n  var input_ids = new Array(encoded.length+2);\n  var attention_mask = new Array(encoded.length+2);\n  var token_type_ids = new Array(encoded.length+2);\n  input_ids[0] = BigInt(101);\n  attention_mask[0] = BigInt(1);\n  token_type_ids[0] = BigInt(0);\n  var i = 0;\n  for(; i < encoded.length; i++) { \n    input_ids[i+1] = BigInt(encoded[i]);\n    attention_mask[i+1] = BigInt(1);\n    token_type_ids[i+1] = BigInt(0);\n  }\n  input_ids[i+1] = BigInt(102);\n  attention_mask[i+1] = BigInt(1);\n  token_type_ids[i+1] = BigInt(0);\n  const sequence_length = input_ids.length;\n  // input_ids = new ort.Tensor('int64', BigInt64Array.from(input_ids), [1,sequence_length]);\n  // attention_mask = new ort.Tensor('int64', BigInt64Array.from(attention_mask), [1,sequence_length]);\n  // token_type_ids = new ort.Tensor('int64', BigInt64Array.from(token_type_ids), [1,sequence_length]);\n\n  input_ids = new ort.Tensor('int32', BigInt32Array.from(input_ids), [1,sequence_length]);\n  attention_mask = new ort.Tensor('int8', BigInt8Array.from(attention_mask), [1,sequence_length]);\n  token_type_ids = new ort.Tensor('int8', BigInt8Array.from(token_type_ids), [1,sequence_length]);\n\n  return {\n    input_ids: input_ids,\n    attention_mask: attention_mask,\n    token_type_ids:token_type_ids\n  }\n}\n\nasync function lm_inference(text) {\n  try { \n    const encoded_ids = await tokenizer.then(t => {\n      return t.tokenize(text); \n    });\n    if(encoded_ids.length === 0) {\n      return [0.0, EMOJI_DEFAULT_DISPLAY];\n    }\n    const start = performance.now();\n    const model_input = create_model_input(encoded_ids);\n    const output =  await session.then(s => { return s.run(model_input,['output_0'])});\n    const duration = (performance.now() - start).toFixed(1);\n    const probs = output['output_0'].data.map(sigmoid).map( t => Math.floor(t*100));\n    // const probs = output['output_0'][0].data.map(sigmoid).map( t => Math.floor(t*100));\n    \n    const result = [];\n    for(var i = 0; i < EMOJIS.length;i++) {\n      const t = [EMOJIS[i], probs[i]];\n      result[i] = t;\n    }\n    result.sort(sortResult); \n    \n    const result_list = [];\n    result_list[0] = [\"Status\", \"Score\"];\n    // for(i = 0; i < 6; i++) {\n    for(i = 0; i < 2; i++) {\n       result_list[i+1] = result[i];\n    }\n    return [duration,result_list];    \n  } catch (e) {\n    return [0.0,EMOJI_DEFAULT_DISPLAY];\n  }\n}    \n\nexport let inference = lm_inference \nexport let columnNames = EMOJI_DEFAULT_DISPLAY\nexport let modelDownloadInProgress = isDownloading\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}