{"ast":null,"code":"import _toConsumableArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import'./Dashboard.css';import axios from'axios';import{inference}from'./inference.js';import{columnNames}from'./inference.js';import{modelDownloadInProgress}from'./inference.js';import Chart from\"react-google-charts\";import Box from'@mui/material/Box';import LinearProgress from'@mui/material/LinearProgress';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),textValue=_useState2[0],setTextValue=_useState2[1];//   const [data, latency, downloading] = useState(\"\");\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),latency=_useState4[0],setLatency=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),downloading=_useState8[0],setDownloading=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),timerID=_useState10[0],setInterval=_useState10[1];//   const [timerID] = useState(\"\");\nvar _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),state=_useState12[0],setState=_useState12[1];//   const [latency, downloading] = useState(\"\");\n//   data= columnNames;\n//   latency=0.0;\n//   downloading=modelDownloadInProgress();\n//   componentDidMount=()=> {\n//     // [textValue, setTextValue] = useState(\"\");\n//    timerID = setInterval(\n//       () => this.checkModelStatus(),\n//       1000\n//     );\n//   }\n//   checkModelStatus=()=> {\n//     this.setState({\n//       downloading: modelDownloadInProgress(),\n//     });\n//     if (!this.state.downloading) {\n//       this.timerID = setInterval(\n//         () => this.checkModelStatus,\n//         5000000\n//       );\n//     }\n//   }\nvar handleChange=function handleChange(e){setData([].concat(_toConsumableArray(data),[columnNames]));setDownloading([].concat(_toConsumableArray(downloading),[modelDownloadInProgress]));setLatency([].concat(_toConsumableArray(latency),[0.0]));// componentDidMount=()=> {\n//         setInterval([...timerID, checkModelStatus(), 1000]);\n//     };\n// checkModelStatus=()=> {\n//     setLatency([...latency, 0.0]);\n//     setDownloading([...downloading, modelDownloadInProgress]);\n//     if (!downloading) {\n//         setInterval([...timerID, checkModelStatus(), 5000000]);\n//     }\n//   }\n// axios.get('/upload')\n// .then(response => {\n//   // Convert data to CSV format(optional)\n//   const file = response.files[0];\n//   console.log(response)\n// })\n// .catch(error => {\n//   // Handle errors\n//   console.error(error);\n// });\nvar file=e.target.files[0];var reader=new FileReader();reader.onload=function(e){var file=e.target.result;console.log(file);setTextValue(file);};reader.onerror=function(e){return alert(e.target.error.name);};reader.readAsText(file);inference(textValue).then(// result => {\nsetData([].concat(_toConsumableArray(data),[inference.result[1]])),setLatency([].concat(_toConsumableArray(latency),[inference.result[0]]))// }\n);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Dashboard\",children:[/*#__PURE__*/_jsx(Chart,{width:'400px',height:'200px',chartType:\"BarChart\"// data={inference.result[1]}\n,data:data,options:{chartArea:{width:'40%'},colors:['purple'],backgroundColor:'#282c34',legend:{textStyle:{color:'white',fontSize:10},labels:{fontColor:'white'}},vAxis:{textStyle:{color:'white',fontSize:13}},hAxis:{minValue:5,maxValue:50,textStyle:{color:'white'}}}}),downloading&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"font\",{size:\"2\",children:\"Downloading model from CDN to browser..\"}),/*#__PURE__*/_jsx(Box,{sx:{width:'400px'},children:/*#__PURE__*/_jsx(LinearProgress,{})}),/*#__PURE__*/_jsx(\"p\",{})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"input\",onChange:handleChange}),/*#__PURE__*/_jsx(\"textarea\",{cols:30,rows:20,value:textValue,onChange:setTextValue,style:{marginTop:15,width:\"50%\"}})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","axios","inference","columnNames","modelDownloadInProgress","Chart","Box","LinearProgress","Dashboard","textValue","setTextValue","latency","setLatency","data","setData","downloading","setDownloading","timerID","setInterval","state","setState","handleChange","e","file","target","files","reader","FileReader","onload","result","console","log","onerror","alert","error","name","readAsText","then","chartArea","width","colors","backgroundColor","legend","textStyle","color","fontSize","labels","fontColor","vAxis","hAxis","minValue","maxValue","display","marginTop"],"sources":["/Users/nguyentrungchinh/project_19/src/Dashboard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Dashboard.css';\nimport axios from 'axios';\n\n\nimport {inference} from './inference.js';\nimport {columnNames} from './inference.js';\nimport {modelDownloadInProgress} from './inference.js';\nimport Chart from \"react-google-charts\";\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\n\n\n\nconst Dashboard = () => {\n  const [textValue, setTextValue] = useState(\"\");\n//   const [data, latency, downloading] = useState(\"\");\n  const [latency, setLatency] = useState([]);\n  const [data, setData] = useState([]);\n  const [downloading, setDownloading] = useState([]);\n  const [timerID, setInterval] = useState([]);\n//   const [timerID] = useState(\"\");\n  const [state, setState] = useState(\"\");\n\n\n//   const [latency, downloading] = useState(\"\");\n\n//   data= columnNames;\n//   latency=0.0;\n//   downloading=modelDownloadInProgress();\n\n//   componentDidMount=()=> {\n//     // [textValue, setTextValue] = useState(\"\");\n//    timerID = setInterval(\n//       () => this.checkModelStatus(),\n//       1000\n//     );\n//   }\n\n//   checkModelStatus=()=> {\n//     this.setState({\n//       downloading: modelDownloadInProgress(),\n//     });\n//     if (!this.state.downloading) {\n//       this.timerID = setInterval(\n//         () => this.checkModelStatus,\n//         5000000\n//       );\n//     }\n//   }\n\n  const handleChange = (e) => {\n\n\n    setData([...data, columnNames]);\n    setDownloading([...downloading, modelDownloadInProgress]);\n    setLatency([...latency, 0.0]);\n\n\n    // componentDidMount=()=> {\n    //         setInterval([...timerID, checkModelStatus(), 1000]);\n\n    //     };\n\n\n    // checkModelStatus=()=> {\n    //     setLatency([...latency, 0.0]);\n    //     setDownloading([...downloading, modelDownloadInProgress]);\n    //     if (!downloading) {\n    //         setInterval([...timerID, checkModelStatus(), 5000000]);\n    //     }\n    //   }\n\n    // axios.get('/upload')\n    // .then(response => {\n    //   // Convert data to CSV format(optional)\n    //   const file = response.files[0];\n    //   console.log(response)\n    // })\n    // .catch(error => {\n    //   // Handle errors\n    //   console.error(error);\n    // });\n\n\n    const file = e.target.files[0];\n\n    let reader = new FileReader();\n\n    reader.onload = (e) => {\n      const file = e.target.result;\n      console.log(file);\n      setTextValue(file);\n    };\n\n    reader.onerror = (e) => alert(e.target.error.name);\n    reader.readAsText(file);\n\n    inference(textValue).then( // result => {\n        setData([...data, inference.result[1]]),\n        setLatency([...latency, inference.result[0]])\n        // }\n        );\n\n     \n    \n    \n    };\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"Dashboard\">\n        {/* <header className=\"App-header\">    */}\n            {/* <em>In-Browser Transformer Inference</em> */}\n\n        <Chart  \n            width={'400px'}\n            height={'200px'}\n            chartType=\"BarChart\"\n            // data={inference.result[1]}\n            data={data}\n            options={{\n            chartArea: { width: '40%'},\n            colors: ['purple'],\n            backgroundColor: '#282c34',\n            legend: { \n                textStyle: {color: 'white', fontSize: 10},\n                labels: {fontColor:'white'}\n            },\n            vAxis: {\n                textStyle: {\n                color: 'white',\n                fontSize: 13\n            }\n            },\n            hAxis: {\n                minValue: 5,\n                maxValue: 50,\n                textStyle: {\n                color: 'white'\n                }\n            }\n        }}\n        />\n        \n\n     {/* <div className=\"App\">  */}\n     \n        {/* <div>\n          {downloading()}\n        </div>  */}\n\n        {/* {downloading()} */}\n\n\n        {downloading && \n        <div><font size=\"2\">Downloading model from CDN to browser..</font>\n        <Box sx={{ width: '400px' }}>\n        <LinearProgress />\n        </Box> \n        <p></p>\n        </div>\n      }\n\n\n    <div style={{ display: \"flex\" }}>\n      <input type=\"file\" name=\"input\" onChange={handleChange} />\n      <textarea\n        cols={30}\n        rows={20}\n        value={textValue}\n        onChange={setTextValue}\n        style={{ marginTop: 15, width: \"50%\" }}\n      ></textarea>\n    </div>\n\n    \n    {/* <div>\n          {downloading()}\n        </div> */}\n\n        {/* </header>  */}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"wPAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,iBAAP,CACA,MAAOC,MAAP,KAAkB,OAAlB,CAGA,OAAQC,SAAR,KAAwB,gBAAxB,CACA,OAAQC,WAAR,KAA0B,gBAA1B,CACA,OAAQC,uBAAR,KAAsC,gBAAtC,CACA,MAAOC,MAAP,KAAkB,qBAAlB,CACA,MAAOC,IAAP,KAAgB,mBAAhB,CACA,MAAOC,eAAP,KAA2B,8BAA3B,C,wFAIA,GAAMC,UAAS,CAAG,QAAZA,UAAY,EAAM,CACtB,cAAkCR,QAAQ,CAAC,EAAD,CAA1C,wCAAOS,SAAP,eAAkBC,YAAlB,eACF;AACE,eAA8BV,QAAQ,CAAC,EAAD,CAAtC,yCAAOW,OAAP,eAAgBC,UAAhB,eACA,eAAwBZ,QAAQ,CAAC,EAAD,CAAhC,yCAAOa,IAAP,eAAaC,OAAb,eACA,eAAsCd,QAAQ,CAAC,EAAD,CAA9C,yCAAOe,WAAP,eAAoBC,cAApB,eACA,eAA+BhB,QAAQ,CAAC,EAAD,CAAvC,0CAAOiB,OAAP,gBAAgBC,WAAhB,gBACF;AACE,gBAA0BlB,QAAQ,CAAC,EAAD,CAAlC,2CAAOmB,KAAP,gBAAcC,QAAd,gBAGF;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,CAAD,CAAO,CAG1BR,OAAO,8BAAKD,IAAL,GAAWV,WAAX,GAAP,CACAa,cAAc,8BAAKD,WAAL,GAAkBX,uBAAlB,GAAd,CACAQ,UAAU,8BAAKD,OAAL,GAAc,GAAd,GAAV,CAGA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,GAAMY,KAAI,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb,CAEA,GAAIC,OAAM,CAAG,GAAIC,WAAJ,EAAb,CAEAD,MAAM,CAACE,MAAP,CAAgB,SAACN,CAAD,CAAO,CACrB,GAAMC,KAAI,CAAGD,CAAC,CAACE,MAAF,CAASK,MAAtB,CACAC,OAAO,CAACC,GAAR,CAAYR,IAAZ,EACAb,YAAY,CAACa,IAAD,CAAZ,CACD,CAJD,CAMAG,MAAM,CAACM,OAAP,CAAiB,SAACV,CAAD,QAAOW,MAAK,CAACX,CAAC,CAACE,MAAF,CAASU,KAAT,CAAeC,IAAhB,CAAZ,EAAjB,CACAT,MAAM,CAACU,UAAP,CAAkBb,IAAlB,EAEArB,SAAS,CAACO,SAAD,CAAT,CAAqB4B,IAArB,CAA2B;AACvBvB,OAAO,8BAAKD,IAAL,GAAWX,SAAS,CAAC2B,MAAV,CAAiB,CAAjB,CAAX,GADX,CAEIjB,UAAU,8BAAKD,OAAL,GAAcT,SAAS,CAAC2B,MAAV,CAAiB,CAAjB,CAAd,GACV;AAHJ,EASC,CAxDH,CAoEA,mBACE,aAAK,SAAS,CAAC,WAAf,wBAII,KAAC,KAAD,EACI,KAAK,CAAE,OADX,CAEI,MAAM,CAAE,OAFZ,CAGI,SAAS,CAAC,UACV;AAJJ,CAKI,IAAI,CAAEhB,IALV,CAMI,OAAO,CAAE,CACTyB,SAAS,CAAE,CAAEC,KAAK,CAAE,KAAT,CADF,CAETC,MAAM,CAAE,CAAC,QAAD,CAFC,CAGTC,eAAe,CAAE,SAHR,CAITC,MAAM,CAAE,CACJC,SAAS,CAAE,CAACC,KAAK,CAAE,OAAR,CAAiBC,QAAQ,CAAE,EAA3B,CADP,CAEJC,MAAM,CAAE,CAACC,SAAS,CAAC,OAAX,CAFJ,CAJC,CAQTC,KAAK,CAAE,CACHL,SAAS,CAAE,CACXC,KAAK,CAAE,OADI,CAEXC,QAAQ,CAAE,EAFC,CADR,CARE,CAcTI,KAAK,CAAE,CACHC,QAAQ,CAAE,CADP,CAEHC,QAAQ,CAAE,EAFP,CAGHR,SAAS,CAAE,CACXC,KAAK,CAAE,OADI,CAHR,CAdE,CANb,EAJJ,CA4CK7B,WAAW,eACZ,oCAAK,aAAM,IAAI,CAAC,GAAX,qDAAL,cACA,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEwB,KAAK,CAAE,OAAT,CAAT,uBACA,KAAC,cAAD,IADA,EADA,cAIA,YAJA,GA7CJ,cAsDA,aAAK,KAAK,CAAE,CAAEa,OAAO,CAAE,MAAX,CAAZ,wBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,OAAxB,CAAgC,QAAQ,CAAE/B,YAA1C,EADF,cAEE,iBACE,IAAI,CAAE,EADR,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAEZ,SAHT,CAIE,QAAQ,CAAEC,YAJZ,CAKE,KAAK,CAAE,CAAE2C,SAAS,CAAE,EAAb,CAAiBd,KAAK,CAAE,KAAxB,CALT,EAFF,GAtDA,GADF,CA0ED,CAnLD,CAqLA,cAAe/B,UAAf"},"metadata":{},"sourceType":"module"}