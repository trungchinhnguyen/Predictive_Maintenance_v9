{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useState}from'react';function lm_processCSV(_x){return _lm_processCSV.apply(this,arguments);}function _lm_processCSV(){_lm_processCSV=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(str){var delim,convert,_args=arguments;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:delim=_args.length>1&&_args[1]!==undefined?_args[1]:',';convert=new FileReader();convert.onload=function(){// Use reader.result\nvar str=convert.result;var headers=str.slice(0,str.indexOf('\\n')).split(',');var rows=str.slice(str.indexOf('\\n')+1).split('\\n');var newArray=rows.map(function(row){var values=row.split(',');var eachObject=headers.reduce(function(obj,header,i){obj[header]=values[i];return obj;},{});return eachObject;});};convert.readAsArrayBuffer(newArray.return);// return eachObject;\n// const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n// const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n// const newArray = rows.map( row => {\n//     const values = row.split(delim);\n//     const eachObject = headers.reduce((obj, header, i) => {\n//         obj[header] = values[i];\n//         return obj;\n//     }, {})\n//     return eachObject;\n// })\n// setCsvArray(newArray)\nreturn _context.abrupt(\"return\",eachObject);case 5:case\"end\":return _context.stop();}}},_callee);}));return _lm_processCSV.apply(this,arguments);}export var processCSV=lm_processCSV;","map":{"version":3,"names":["useState","lm_processCSV","str","delim","convert","FileReader","onload","result","headers","slice","indexOf","split","rows","newArray","map","row","values","eachObject","reduce","obj","header","i","readAsArrayBuffer","return","processCSV"],"sources":["/Users/nguyentrungchinh/project_19/src/processCSV.js"],"sourcesContent":["import { useState } from 'react'\n\n\nasync function lm_processCSV(str, delim=',') {\n\n    let convert = new FileReader();\n\n    convert.onload = () => {\n      // Use reader.result\n\n      const str = convert.result\n  \n      const headers = str.slice(0,str.indexOf('\\n')).split(',');\n      const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n      const newArray = rows.map( row => {\n        const values = row.split(',');\n        const eachObject = headers.reduce((obj, header, i) => {\n            obj[header] = values[i];\n            return obj;\n        }, {})\n        return eachObject;\n    })\n\n    }\n    convert.readAsArrayBuffer(newArray.return)\n\n    // return eachObject;\n\n    // const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n    // const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n    // const newArray = rows.map( row => {\n    //     const values = row.split(delim);\n    //     const eachObject = headers.reduce((obj, header, i) => {\n    //         obj[header] = values[i];\n    //         return obj;\n    //     }, {})\n    //     return eachObject;\n    // })\n\n    // setCsvArray(newArray)\n\n\n    return eachObject;\n}\n\nexport let processCSV = lm_processCSV"],"mappings":"gQAAA,OAASA,QAAT,KAAyB,OAAzB,C,QAGeC,c,qJAAf,iBAA6BC,GAA7B,sJAAkCC,KAAlC,+CAAwC,GAAxC,CAEQC,OAFR,CAEkB,GAAIC,WAAJ,EAFlB,CAIID,OAAO,CAACE,MAAR,CAAiB,UAAM,CACrB;AAEA,GAAMJ,IAAG,CAAGE,OAAO,CAACG,MAApB,CAEA,GAAMC,QAAO,CAAGN,GAAG,CAACO,KAAJ,CAAU,CAAV,CAAYP,GAAG,CAACQ,OAAJ,CAAY,IAAZ,CAAZ,EAA+BC,KAA/B,CAAqC,GAArC,CAAhB,CACA,GAAMC,KAAI,CAAGV,GAAG,CAACO,KAAJ,CAAUP,GAAG,CAACQ,OAAJ,CAAY,IAAZ,EAAkB,CAA5B,EAA+BC,KAA/B,CAAqC,IAArC,CAAb,CAEA,GAAME,SAAQ,CAAGD,IAAI,CAACE,GAAL,CAAU,SAAAC,GAAG,CAAI,CAChC,GAAMC,OAAM,CAAGD,GAAG,CAACJ,KAAJ,CAAU,GAAV,CAAf,CACA,GAAMM,WAAU,CAAGT,OAAO,CAACU,MAAR,CAAe,SAACC,GAAD,CAAMC,MAAN,CAAcC,CAAd,CAAoB,CAClDF,GAAG,CAACC,MAAD,CAAH,CAAcJ,MAAM,CAACK,CAAD,CAApB,CACA,MAAOF,IAAP,CACH,CAHkB,CAGhB,EAHgB,CAAnB,CAIA,MAAOF,WAAP,CACH,CAPkB,CAAjB,CASD,CAjBD,CAkBAb,OAAO,CAACkB,iBAAR,CAA0BT,QAAQ,CAACU,MAAnC,EAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAtCJ,gCAyCWN,UAzCX,wD,gDA4CA,MAAO,IAAIO,WAAU,CAAGvB,aAAjB"},"metadata":{},"sourceType":"module"}