{"ast":null,"code":"import _toConsumableArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import'./FileUpload.scss';import axios from'axios';// import React, { useState } from \"react\";\nimport{useState}from\"react\";// import './Dashboard.css';\n// import './App.css';\n// import { Component } from 'react';\n// // import { useState } from 'react';\n// // import Textarea from \"react-dropzone-textarea\";\n// import {inference} from './inference.js';\n// import {columnNames} from './inference.js';\n// import {modelDownloadInProgress} from './inference.js';\n// import Chart from \"react-google-charts\";\n// import Box from '@mui/material/Box';\n// import LinearProgress from '@mui/material/LinearProgress';\n// import { useState } from 'react';\n// import './App.scss';\n// import FileUpload from './FileUpload/FileUpload';\n// import FileList from './FileList/FileList';\n// import FileProcessing from './FileProcessing';\n// import Dashboard from './Dashboard';\n// import './Dashboard.css';\n// // import {uploadfile} from './uploadfile.js';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FileUpload=function FileUpload(_ref){var files=_ref.files,setFiles=_ref.setFiles,removeFile=_ref.removeFile;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,4),textValue=_useState2[0],setTextValue=_useState2[1],state=_useState2[2],setState=_useState2[3];// function FileUpload ({ files, setFiles, removeFile })  {\nvar uploadHandler=function uploadHandler(event){var file=event.target.files[0];if(!file)return;file.isUploading=true;setFiles([].concat(_toConsumableArray(files),[file]));// upload file\n// const formData = new FormData();\n// formData.append(\n//     // \"newFile\",\n//     file.name,\n//     file,\n//     file.name\n// )\n// axios.post('http://localhost:8080/upload', formData)\naxios.post('/upload',{file:(event.target.files[0],event.target.files[0].name)}//     {\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   }\n).then(function(res){file.isUploading=false;setFiles([].concat(_toConsumableArray(files),[file]));}).catch(function(err){// inform the user\nconsole.error(err);removeFile(file.name);});var reader=new FileReader();reader.onload=function(e){var file=e.target.result;console.log(file);setTextValue(file);};reader.onerror=function(e){return alert(e.target.error.name);};reader.readAsText(file);// componentDidMount= (e) =>  {\n//     timerID = setInterval(\n//       () => checkModelStatus(),\n//       1000\n//     );\n//   }\n//   checkModelStatus= (e) =>  {\n//     setState({\n//       downloading: modelDownloadInProgress(),\n//     });\n//     if (!state.downloading) {\n//       this.timerID = setInterval(\n//         () => this.checkModelStatus,\n//         5000000\n//       );\n//     }\n//   }\n// handleChange= (e) =>  {  \n//     inference(textValue).then( result => {\n//         setState({\n//         text : textValue,\n//         data:result[1],\n//         latency:result[0],\n//       });\n//     });\n//   }\n};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"Dashboard\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"input\",onChange:uploadHandler}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"i\",{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus})}),\"Upload\"]}),/*#__PURE__*/_jsx(\"textarea\",{cols:30,rows:20,value:textValue,onChange:setTextValue,style:{marginTop:15,width:\"50%\"}})]})});};export default FileUpload;// export let FileUpload_exp =  FileUpload","map":{"version":3,"names":["React","FontAwesomeIcon","faPlus","axios","useState","FileUpload","files","setFiles","removeFile","textValue","setTextValue","state","setState","uploadHandler","event","file","target","isUploading","post","name","then","res","catch","err","console","error","reader","FileReader","onload","e","result","log","onerror","alert","readAsText","marginTop","width"],"sources":["/Users/nguyentrungchinh/project_19/src/FileUpload/FileUpload.jsx"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './FileUpload.scss'\nimport axios from 'axios'\n\n// import React, { useState } from \"react\";\nimport { useState } from \"react\";\n// import './Dashboard.css';\n\n\n\n// import './App.css';\n\n// import { Component } from 'react';\n\n// // import { useState } from 'react';\n// // import Textarea from \"react-dropzone-textarea\";\n\n// import {inference} from './inference.js';\n// import {columnNames} from './inference.js';\n// import {modelDownloadInProgress} from './inference.js';\n// import Chart from \"react-google-charts\";\n// import Box from '@mui/material/Box';\n// import LinearProgress from '@mui/material/LinearProgress';\n\n// import { useState } from 'react';\n// import './App.scss';\n// import FileUpload from './FileUpload/FileUpload';\n// import FileList from './FileList/FileList';\n// import FileProcessing from './FileProcessing';\n// import Dashboard from './Dashboard';\n// import './Dashboard.css';\n\n// // import {uploadfile} from './uploadfile.js';\n\n\n\nconst FileUpload = ({ files, setFiles, removeFile }) => {\n\n    const [textValue, setTextValue, state, setState] = useState(\"\");\n    \n\n// function FileUpload ({ files, setFiles, removeFile })  {\n    const uploadHandler = (event) => {\n        const file = event.target.files[0];\n        if(!file) return;\n        file.isUploading = true;\n        setFiles([...files, file])\n\n        // upload file\n        // const formData = new FormData();\n        // formData.append(\n            \n        //     // \"newFile\",\n        //     file.name,\n        //     file,\n        //     file.name\n        // )\n\n        // axios.post('http://localhost:8080/upload', formData)\n        axios.post('/upload', {file: (event.target.files[0], event.target.files[0].name)}\n        //     {\n        //     headers: {\n        //       \"Content-Type\": \"multipart/form-data\",\n        //     },\n        //   }\n          )\n            .then((res) => {\n                file.isUploading = false;\n                setFiles([...files, file])\n            })\n            .catch((err) => {\n                // inform the user\n                console.error(err)\n                removeFile(file.name)\n            })\n\n\n        let reader = new FileReader();\n    \n        reader.onload = (e) => {\n        const file = e.target.result;\n        console.log(file);\n        setTextValue(file);\n        };\n    \n        reader.onerror = (e) => alert(e.target.error.name);\n        reader.readAsText(file); \n\n        \n        // componentDidMount= (e) =>  {\n        //     timerID = setInterval(\n        //       () => checkModelStatus(),\n        //       1000\n        //     );\n        //   }\n        \n        //   checkModelStatus= (e) =>  {\n        //     setState({\n        //       downloading: modelDownloadInProgress(),\n        //     });\n        //     if (!state.downloading) {\n        //       this.timerID = setInterval(\n        //         () => this.checkModelStatus,\n        //         5000000\n        //       );\n        //     }\n        //   }\n\n\n        // handleChange= (e) =>  {  \n        //     inference(textValue).then( result => {\n        //         setState({\n        //         text : textValue,\n        //         data:result[1],\n        //         latency:result[0],\n        //       });\n        //     });\n        \n        //   }\n\n        \n        \n\n\n    }\n\n    return (\n        <>\n\n            {/* <div className=\"file-card\">\n\n                <div className=\"file-inputs\">\n                \n                    <input type=\"file\" onChange={uploadHandler} />\n                    <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n                    \n\n                </div>\n\n                <p className=\"main\">Supported files</p>\n                <p className=\"info\">CSV, TXT, PDF, JPG, PNG</p>\n\n            </div> */}\n\n\n            <div className=\"Dashboard\">\n            {/* <div className=\"App\">  */}\n            {/* <div style={{ display: \"flex\" }}> */}\n            <input type=\"file\" name=\"input\" onChange={uploadHandler} />\n            <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n            <textarea\n                cols={30}\n                rows={20}\n                value={textValue}\n                onChange={setTextValue}\n                style={{ marginTop: 15, width: \"50%\" }}\n            ></textarea>\n            {/* </div> */}\n\n\n\n            {/* <Chart  \n                    width={'400px'}\n                    height={'200px'}\n                    chartType=\"BarChart\"\n                    data={state.data}\n                    options={{\n                    chartArea: { width: '40%'},\n                    colors: ['purple'],\n                    backgroundColor: '#282c34',\n                    legend: { \n                        textStyle: {color: 'white', fontSize: 10},\n                        labels: {fontColor:'white'}\n                    },\n                    vAxis: {\n                        textStyle: {\n                        color: 'white',\n                        fontSize: 13\n                    }\n                    },\n                    hAxis: {\n                        minValue: 5,\n                        maxValue: 50,\n                        textStyle: {\n                        color: 'white'\n                        }\n                    }\n                }}\n                />\n\n                {state.downloading && \n                        <div><font size=\"2\">Downloading model from CDN to browser..</font>\n                        <Box sx={{ width: '400px' }}>\n                        <LinearProgress />\n                        </Box> \n                        <p></p>\n                        </div>\n                    }\n\n */}\n            </div>\n\n\n\n\n        </>\n\n        \n    )\n}\n\nexport default FileUpload\n\n// export let FileUpload_exp =  FileUpload\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}