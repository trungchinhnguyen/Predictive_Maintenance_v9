{"ast":null,"code":"import _toConsumableArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import'./FileUpload.scss';import axios from'axios';// import React, { useState } from \"react\";\nimport{useState}from\"react\";// import './Dashboard.css';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FileUpload=function FileUpload(_ref){var files=_ref.files,setFiles=_ref.setFiles,removeFile=_ref.removeFile;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),textValue=_useState2[0],setTextValue=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),csvFile=_useState4[0],setCsvFile=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),csvArray=_useState6[0],setCsvArray=_useState6[1];var processCSV=function processCSV(str){var delim=arguments.length>1&&arguments[1]!==undefined?arguments[1]:',';var headers=str.slice(0,str.indexOf('\\n')).split(delim);var rows=str.slice(str.indexOf('\\n')+1).split('\\n');var newArray=rows.map(function(row){var values=row.split(delim);var eachObject=headers.reduce(function(obj,header,i){obj[header]=values[i];return obj;},{});return eachObject;});setCsvArray(newArray);};var submit=function submit(){var file=csvFile;var reader=new FileReader();reader.onload=function(e){var text=e.target.result;console.log(text);processCSV(text);};reader.readAsText(file);};// function FileUpload ({ files, setFiles, removeFile })  {\nvar uploadHandler=function uploadHandler(event){var file=event.target.files[0];if(!file)return;file.isUploading=true;setFiles([].concat(_toConsumableArray(files),[file]));// upload file\n// const formData = new FormData();\n// formData.append(\n//     // \"newFile\",\n//     file.name,\n//     file,\n//     file.name\n// )\n// axios.post('http://localhost:8080/upload', formData)\naxios.post('/upload',{file:(event.target.files[0],event.target.files[0].name)}//     {\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   }\n).then(function(res){file.isUploading=false;setFiles([].concat(_toConsumableArray(files),[file]));}).catch(function(err){// inform the user\nconsole.error(err);removeFile(file.name);});var reader=new FileReader();reader.onload=function(e){var file=e.target.result;console.log(file);// processCSV(file);\nsetTextValue(file);};reader.onerror=function(e){return alert(e.target.error.name);};reader.readAsText(file);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"Dashboard\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"input\",onChange:uploadHandler}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"i\",{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus})}),\"Upload\"]}),/*#__PURE__*/_jsx(\"textarea\",{cols:30,rows:20,value:textValue,onChange:setTextValue,style:{marginTop:15,width:\"50%\"}}),/*#__PURE__*/_jsxs(\"form\",{id:\"csv-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",id:\"csvFile\",onChange:function onChange(e){setCsvFile(e.target.files[0]);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){e.preventDefault();if(csvFile)submit();},children:\"Submit\"})]})]})});};export default FileUpload;// export let FileUpload_exp =  FileUpload","map":{"version":3,"names":["React","FontAwesomeIcon","faPlus","axios","useState","FileUpload","files","setFiles","removeFile","textValue","setTextValue","csvFile","setCsvFile","csvArray","setCsvArray","processCSV","str","delim","headers","slice","indexOf","split","rows","newArray","map","row","values","eachObject","reduce","obj","header","i","submit","file","reader","FileReader","onload","e","text","target","result","console","log","readAsText","uploadHandler","event","isUploading","post","name","then","res","catch","err","error","onerror","alert","marginTop","width","preventDefault"],"sources":["/Users/nguyentrungchinh/project_19/src/FileUpload/FileUpload.jsx"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './FileUpload.scss'\nimport axios from 'axios'\n\n// import React, { useState } from \"react\";\nimport { useState } from \"react\";\n// import './Dashboard.css';\n\n\n\n\n\nconst FileUpload = ({ files, setFiles, removeFile }) => {\n\n    const [textValue, setTextValue] = useState(\"\");\n\n    const [csvFile, setCsvFile] = useState();\n    const [csvArray, setCsvArray] = useState([]);\n\n    const processCSV = (str, delim=',') => {\n        const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n        const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n        const newArray = rows.map( row => {\n            const values = row.split(delim);\n            const eachObject = headers.reduce((obj, header, i) => {\n                obj[header] = values[i];\n                return obj;\n            }, {})\n            return eachObject;\n    })\n\n    setCsvArray(newArray)\n    }\n\n    const submit = () => {\n        const file = csvFile;\n        const reader = new FileReader();\n\n        reader.onload = function(e) {\n            const text = e.target.result;\n            console.log(text);\n            processCSV(text);\n        }\n\n        reader.readAsText(file);\n    }\n    \n\n// function FileUpload ({ files, setFiles, removeFile })  {\n    const uploadHandler = (event) => {\n        const file = event.target.files[0];\n        if(!file) return;\n        file.isUploading = true;\n        setFiles([...files, file])\n\n        // upload file\n        // const formData = new FormData();\n        // formData.append(\n            \n        //     // \"newFile\",\n        //     file.name,\n        //     file,\n        //     file.name\n        // )\n\n        // axios.post('http://localhost:8080/upload', formData)\n        axios.post('/upload', {file: (event.target.files[0], event.target.files[0].name)}\n        //     {\n        //     headers: {\n        //       \"Content-Type\": \"multipart/form-data\",\n        //     },\n        //   }\n          )\n            .then((res) => {\n                file.isUploading = false;\n                setFiles([...files, file])\n            })\n            .catch((err) => {\n                // inform the user\n                console.error(err)\n                removeFile(file.name)\n            })\n\n\n\n\n\n        let reader = new FileReader();\n    \n        reader.onload = (e) => {\n        const file = e.target.result;\n        console.log(file);\n        // processCSV(file);\n        setTextValue(file);\n        };\n    \n        reader.onerror = (e) => alert(e.target.error.name);\n        reader.readAsText(file); \n\n        \n        \n    \n\n    }\n\n    return (\n        <>\n\n            {/* <div className=\"file-card\">\n\n                <div className=\"file-inputs\">\n                \n                    <input type=\"file\" onChange={uploadHandler} />\n                    <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n                    \n\n                </div>\n\n                <p className=\"main\">Supported files</p>\n                <p className=\"info\">CSV, TXT, PDF, JPG, PNG</p>\n\n            </div> */}\n\n\n            <div className=\"Dashboard\">\n            {/* <div className=\"App\">  */}\n            {/* <div style={{ display: \"flex\" }}> */}\n            <input type=\"file\" name=\"input\" onChange={uploadHandler} />\n            <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n\n            <textarea\n                cols={30}\n                rows={20}\n                value={textValue}\n                onChange={setTextValue}\n                style={{ marginTop: 15, width: \"50%\" }}\n            ></textarea> \n            {/* </div> */}\n\n\n\n\n\n\n            <form id='csv-form'>\n                <input\n                    type='file'\n                    accept='.csv'\n                    id='csvFile'\n                    onChange={(e) => {\n                        setCsvFile(e.target.files[0])\n                    }}\n                >\n                </input>\n                <br/>\n                <button\n                    onClick={(e) => {\n                        e.preventDefault()\n                        if(csvFile)submit()\n                    }}>\n                    Submit\n                </button>\n            </form>\n\n            </div>\n\n\n\n\n{/* \n            <form id='csv-form'>\n            <input\n                type='file'\n                accept='.csv'\n                id='csvFile'\n                onChange={(e) => {\n                    setCsvFile(e.target.files[0])\n                }}\n            >\n            </input>\n            <br/>\n            <button\n                onClick={(e) => {\n                    e.preventDefault()\n                    if(csvFile)submit()\n                }}\n            >\n                Submit\n            </button>\n            <br/>\n            <br/>\n            {csvArray.length>0 ? \n            <>\n                <table>\n                    <thead>\n                        <th>product</th>\n                        <th>price</th>\n                    </thead>\n                    <tbody>\n                        {\n                            csvArray.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{item.product}</td>\n                                    <td>{item.price}</td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </> : null}\n        </form> */}\n\n\n        </>\n\n        \n    )\n}\n\nexport default FileUpload\n\n// export let FileUpload_exp =  FileUpload\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}