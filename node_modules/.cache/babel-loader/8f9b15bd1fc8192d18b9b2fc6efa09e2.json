{"ast":null,"code":"import _classCallCheck from\"/Users/nguyentrungchinh/project_20/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nguyentrungchinh/project_20/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nguyentrungchinh/project_20/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nguyentrungchinh/project_20/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import'./App.css';import axios from'axios';import React from'react';import{Component}from'react';import{inference}from'./inference.js';import{columnNames}from'./inference.js';import{modelDownloadInProgress}from'./inference.js';import Chart from\"react-google-charts\";import Box from'@mui/material/Box';import LinearProgress from'@mui/material/LinearProgress';import{useState}from'react';import'./App.scss';// import FileUpload from './FileUpload/FileUpload';\n// import FileList from './FileList/FileList';\n// import FileProcessing from './FileProcessing';\n// import './Dashboard.css';\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';// import './FileUpload/FileUpload.scss'\nimport ReactFileReader from'react-file-reader';import{CsvToHtmlTable}from'react-csv-to-table';import Papa from\"papaparse\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TextInputArea=/*#__PURE__*/function(_React$Component){_inherits(TextInputArea,_React$Component);var _super=_createSuper(TextInputArea);function TextInputArea(props){var _this;_classCallCheck(this,TextInputArea);_this=_super.call(this,props);_this.onFileChange=function(event){_this.setState({selectedFile:event.target.files[0]});var file=event.target.files[0];var reader=new FileReader();reader.onload=function(event){var file=event.target.result;console.log(file);};reader.onerror=function(e){return alert(e.target.error.name);};reader.readAsText(file);};_this.onFileUpload=function(){axios.post('/upload',{file:(_this.state.selectedFile,_this.state.selectedFile.name)}).then(function(res){console.log(res);}).catch(function(err){console.error(err);});var reader=new FileReader();reader.onload=function(){var lines=reader.result.split(\"\\n\");var headers=lines[0].split(',');var currentLine=lines[1].split(',');var textline=headers[0]+' '+currentLine[0]+'\\n'+headers[1]+' '+currentLine[1]+'\\n'+headers[2]+' '+currentLine[2]+'\\n'+headers[3]+' '+currentLine[3]+'\\n'+headers[4]+' '+currentLine[4]+'\\n'+headers[5]+' '+currentLine[5]+'\\n'+headers[6]+' '+currentLine[6]+'\\n'+headers[7]+' '+currentLine[7]+'\\n'+headers[8]+' '+currentLine[8];_this.setState({text:textline});inference(textline).then(function(result){_this.setState({text:_this.state.text,data:result[1],latency:result[0]});});};reader.readAsText(_this.state.selectedFile);};_this.state={text:'',data:columnNames,latency:0.0,downloading:modelDownloadInProgress(),selectedFile:null};return _this;}_createClass(TextInputArea,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.timerID=setInterval(function(){return _this2.checkModelStatus();},1000);}},{key:\"checkModelStatus\",value:function checkModelStatus(){var _this3=this;this.setState({downloading:modelDownloadInProgress()});if(!this.state.downloading){this.timerID=setInterval(function(){return _this3.checkModelStatus;},5000000);}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"em\",{children:\"Precdictive Maintenance: Transformer Inference\"}),/*#__PURE__*/_jsx(Chart,{width:'400px',height:'200px',chartType:\"BarChart\",data:this.state.data,options:{chartArea:{width:'40%'},colors:['yellow'],backgroundColor:'#282c34',legend:{textStyle:{color:'white',fontSize:10},labels:{fontColor:'white'}},vAxis:{textStyle:{color:'white',fontSize:13}},hAxis:{minValue:5,maxValue:50,textStyle:{color:'white'}}}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"File Upload!\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:this.onFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:this.onFileUpload,children:\"Upload!\"}),/*#__PURE__*/_jsx(ReactFileReader,{handleFiles:this.handleFiles,fileTypes:'.csv'}),/*#__PURE__*/_jsx(\"textarea\",{cols:60,rows:20,value:this.state.text// value={this.state.csvData}\n,onChange:this.onFileChange,style:{marginTop:15,width:\"50%\"}})]})]}),this.state.downloading&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"font\",{size:\"2\",children:\"Downloading model from CDN to browser..\"}),/*#__PURE__*/_jsx(Box,{sx:{width:'400px'},children:/*#__PURE__*/_jsx(LinearProgress,{})}),/*#__PURE__*/_jsx(\"p\",{})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"font\",{size:\"3\",children:[\"Inference Latency \",this.state.latency,\" ms\"]})})]})});}}]);return TextInputArea;}(React.Component);export default TextInputArea;","map":{"version":3,"names":["axios","React","Component","inference","columnNames","modelDownloadInProgress","Chart","Box","LinearProgress","useState","FontAwesomeIcon","faPlus","ReactFileReader","CsvToHtmlTable","Papa","TextInputArea","props","onFileChange","event","setState","selectedFile","target","files","file","reader","FileReader","onload","result","console","log","onerror","e","alert","error","name","readAsText","onFileUpload","post","state","then","res","catch","err","lines","split","headers","currentLine","textline","text","data","latency","downloading","timerID","setInterval","checkModelStatus","chartArea","width","colors","backgroundColor","legend","textStyle","color","fontSize","labels","fontColor","vAxis","hAxis","minValue","maxValue","handleFiles","marginTop"],"sources":["/Users/nguyentrungchinh/project_20/src/App.jsx"],"sourcesContent":["import './App.css';\n\nimport axios from 'axios';\n\nimport React from 'react';\n\nimport { Component } from 'react';\n\nimport {inference} from './inference.js';\nimport {columnNames} from './inference.js';\nimport {modelDownloadInProgress} from './inference.js';\nimport Chart from \"react-google-charts\";\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { useState } from 'react';\nimport './App.scss';\n// import FileUpload from './FileUpload/FileUpload';\n// import FileList from './FileList/FileList';\n// import FileProcessing from './FileProcessing';\n// import './Dashboard.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n// import './FileUpload/FileUpload.scss'\n\nimport ReactFileReader from 'react-file-reader';\nimport { CsvToHtmlTable } from 'react-csv-to-table';\nimport Papa from \"papaparse\";\n\n \n\nclass TextInputArea extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      data:columnNames,\n      latency:0.0,\n      downloading:modelDownloadInProgress(),\n      selectedFile: null,\n    };\n\n  }\n\n\n  onFileChange =event => {\n    this.setState({ selectedFile: event.target.files[0] });\n          const file = event.target.files[0]; \n          let reader = new FileReader();\n          reader.onload = function(event) {\n            const file = event.target.result;\n            console.log(file);\n          };\n\n          reader.onerror = (e) => alert(e.target.error.name);\n          reader.readAsText(file); \n\n  }\n\n\n  onFileUpload=() => {\n\n    axios.post('/upload', {file: (this.state.selectedFile, this.state.selectedFile.name)}\n          )\n          .then((res) => {\n            console.log(res);\n            })\n            .catch((err) => {\n                console.error(err)\n            })\n        let reader = new FileReader();\n\n        reader.onload = () => {\n\n          const lines = reader.result.split(\"\\n\");\n          const headers = lines[0].split(',');\n          const currentLine = lines[1].split(',');\n          const textline = headers[0] + ' ' + currentLine[0] + '\\n'+ headers[1] + ' ' + currentLine[1] + '\\n'\n                            + headers[2] + ' ' + currentLine[2] + '\\n'+ headers[3] + ' ' + currentLine[3] +  '\\n'\n                            + headers[4] + ' ' + currentLine[4] + '\\n'+ headers[5] + ' ' + currentLine[5] + '\\n'\n                            + headers[6] + ' ' + currentLine[6] + '\\n'+ headers[7] + ' ' + currentLine[7] + '\\n'\n                            + headers[8] + ' ' + currentLine[8];\n\n          this.setState({\n            text: textline\n          })\n\n          inference(textline).then( result => {\n            this.setState({\n              text : this.state.text,\n              data:result[1],\n              latency:result[0],\n            });\n      \n          })\n\n        };\n        reader.readAsText(this.state.selectedFile);\n\n     };\n\n  componentDidMount() {\n\n    this.timerID = setInterval(\n      () => this.checkModelStatus(),\n      1000\n    );\n  }\n\n  checkModelStatus() {\n    this.setState({\n      downloading: modelDownloadInProgress(),\n    });\n    if (!this.state.downloading) {\n      this.timerID = setInterval(\n        () => this.checkModelStatus,\n        5000000\n      );\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n      <header className=\"App-header\">   \n      <em>Precdictive Maintenance: Transformer Inference</em>\n      <Chart  \n        width={'400px'}\n        height={'200px'}\n        chartType=\"BarChart\"\n        data={this.state.data}\n        options={{\n          chartArea: { width: '40%'},\n          colors: ['yellow'],\n          backgroundColor: '#282c34',\n          legend: { \n            textStyle: {color: 'white', fontSize: 10},\n            labels: {fontColor:'white'}\n          },\n          vAxis: {\n            textStyle: {\n            color: 'white',\n            fontSize: 13\n          }\n          },\n          hAxis: {\n            minValue: 5,\n            maxValue: 50,\n            textStyle: {\n              color: 'white'\n            }\n          }\n      }}\n      />\n\n      <div>\n        <h5>File Upload!</h5>\n        <div>\n          <input type=\"file\" onChange={this.onFileChange} />\n          <button onClick={this.onFileUpload}>\n            Upload!\n          </button>\n          <ReactFileReader  handleFiles={this.handleFiles} fileTypes={'.csv'}>\n          </ReactFileReader>\n          <textarea\n                cols={60}\n                rows={20}\n                value={this.state.text}\n                // value={this.state.csvData}\n                onChange={this.onFileChange}\n                style={{ marginTop: 15, width: \"50%\" }}\n            ></textarea> \n        </div>\n      </div>\n\n\n      {this.state.downloading && \n        <div><font size=\"2\">Downloading model from CDN to browser..</font>\n        <Box sx={{ width: '400px' }}>\n        <LinearProgress />\n        </Box> \n        <p></p>\n        </div>\n      }\n\n       <div><font size=\"3\">Inference Latency {this.state.latency} ms</font></div>\n  \n      </header> \n\n    </div>   \n    );\n\n\n  };\n  \n\n}\nexport default TextInputArea;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}