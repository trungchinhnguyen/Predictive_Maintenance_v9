{"ast":null,"code":"import _toConsumableArray from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nguyentrungchinh/project_19/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import'./App.css';import axios from'axios';// import React, { Component } from 'react';\nimport React from'react';import{Component}from'react';// import { useState } from 'react';\n// import Textarea from \"react-dropzone-textarea\";\nimport{inference}from'./inference.js';import{columnNames}from'./inference.js';import{modelDownloadInProgress}from'./inference.js';import Chart from\"react-google-charts\";import Box from'@mui/material/Box';import LinearProgress from'@mui/material/LinearProgress';import{useState}from'react';import'./App.scss';import FileUpload from'./FileUpload/FileUpload';import FileList from'./FileList/FileList';// import {uploadfile} from './uploadfile.js';\n// import React from 'react'\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus}from'@fortawesome/free-solid-svg-icons';import'./FileUpload/FileUpload.scss';// import axios from 'axios'\n// function App() {\n//   const [files, setFiles] = useState([])\n//   const removeFile = (filename) => {\n//     setFiles(files.filter(file => file.name !== filename))\n//   }\n//   return (\n//     <div className=\"App\">\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//     </div>\n//   );\n// }\n// export default App;\n// function App() {\n//   const [files, setFiles] = useState([])\n//   const removeFile = (filename) => {\n//     setFiles(files.filter(file => file.name !== filename))\n//   }\n//   componentDidMount= () =>{\n//     timerID = setInterval(\n//       () => checkModelStatus(),\n//       1000\n//     );\n//   }\n//   checkModelStatus= () => {\n//     setState({\n//       downloading: modelDownloadInProgress(),\n//     });\n//     if (!this.state.downloading) {\n//       timerID = setInterval(\n//         () => this.checkModelStatus,\n//         5000000\n//       );\n//     };\n//   }\n//   handleChange= (event) => {  \n//     inference(event.target.value).then( result => {\n//       this.setState({\n//         text : event.target.value,\n//         data:result[1],\n//         latency:result[0],\n//       });\n//     });\n//   }\n//   return (\n//     <div className=\"App\">\n//       <div>\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//       </div>\n//       <header className=\"App-header\">   \n//       <em>In-Browser Transformer Inference</em>\n//       <Chart  \n//         width={'400px'}\n//         height={'200px'}\n//         chartType=\"BarChart\"\n//         data={state.data}\n//         options={{\n//           chartArea: { width: '40%'},\n//           colors: ['purple'],\n//           backgroundColor: '#282c34',\n//           legend: { \n//             textStyle: {color: 'white', fontSize: 10},\n//             labels: {fontColor:'white'}\n//           },\n//           vAxis: {\n//             textStyle: {\n//             color: 'white',\n//             fontSize: 13\n//           }\n//           },\n//           hAxis: {\n//             minValue: 5,\n//             maxValue: 50,\n//             textStyle: {\n//               color: 'white'\n//             }\n//           }\n//       }}\n//       />\n//       {state.downloading && \n//         <div><font size=\"2\">Downloading model from CDN to browser..</font>\n//         <Box sx={{ width: '400px' }}>\n//         <LinearProgress />\n//         </Box> \n//         <p></p>\n//         </div>\n//       }\n//       <textarea rows=\"8\" cols=\"24\" className=\"App-textarea\" name=\"message\" \n//        placeholder={this.state.text} autoFocus onChange={this.handleChange}>\n//       </textarea>\n//       {/* <textarea rows=\"8\" cols=\"24\" className=\"App-textarea\"  name=\"message\" \n//       //  placeholder={this.state.text} autoFocus //onChange={this.handleChange}\n//       // rows=\"8\" cols=\"24\" placeholder={this.state.text}\n//         // placeholder={this.state.text} autoFocus onChange={this.onFileChange}\n//         value = {this.Dashboard.value}\n//         onChange={e => this.Dashboard.setValue(e.target.value)}\n//         onDropRead={text => this.Dashboard.setValue(text)}\n//         textareaProps={{\n//           // cols: 24,\n//           // rows: 8,\n//           placeholder: \"Drop one text file here...\"\n//         }}\n//         // onChange={this.Dashboard}  \n//         // {this.Dashboard()} \n//         ></textarea> */}\n//        <div><font size=\"3\">Inference Latency {this.state.latency} ms</font></div>\n//       <div><font size=\"3\">GitHub Repo: <a href=\"https://github.com/jobergum/browser-ml-inference\">browser-ml-inference</a></font></div>\n//       <div><font size=\"3\">Model was trained on the <a href=\"https://ai.googleblog.com/2021/10/goemotions-dataset-for-fine-grained.html\">GoEmotions</a> dataset.</font></div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\n// class TextInputArea extends React.Component {\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.uploadHandler=function(event){var file=event.target.files[0];if(!file)return;file.isUploading=true;setFiles([].concat(_toConsumableArray(files),[file]));// upload file\n// const formData = new FormData();\n// formData.append(\n//     // \"newFile\",\n//     file.name,\n//     file,\n//     file.name\n// )\n// axios.post('http://localhost:8080/upload', formData)\naxios.post('/upload',{newfile:(event.target.files[0],event.target.files[0].name)}//     {\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   }\n).then(function(res){file.isUploading=false;setFiles([].concat(_toConsumableArray(files),[file]));}).catch(function(err){// inform the user\nconsole.error(err);removeFile(file.name);});};_this.state={text:'Enter text to classify emotion, model trained on English text.',data:columnNames,latency:0.0,downloading:modelDownloadInProgress()};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}// Dashboard = () => {\n//   const [value , setValue] = React.useState(\"\");\n//   const handleChange = (e) => {\n//     const file = e.target.files[0];\n//     let reader = new FileReader();\n//     reader.onload = (e) => {\n//       const file = e.target.result;\n//       console.log(file);\n//       setValue(file);\n//     };\n//     reader.onerror = (e) => alert(e.target.error.name);\n//     reader.readAsText(file);\n//   };\n// return (\n//   <div style={{ display: \"flex\" }}>\n//     <input type=\"file\" name=\"input\" onChange={handleChange}\n//     // placeholder={this.state.text} autoFocus\n//      />\n//     <textarea\n//       cols={30}\n//       rows={20}\n//       value={value}\n//       onChange={setValue}\n//       style={{ marginTop: 15, width: \"50%\" }}\n//     ></textarea>\n//   </div>\n// );\n// }\n// state = {\n//   // Initially, no file is selected\n//   selectedFile: null\n// }\n// // On file select (from the pop up)\n// onFileChange = event => {\n//   // Update the state\n//   this.setState({ selectedFile: event.target.files[0] });\n// }\n// // On file upload (click the upload button)\n// onFileUpload = () => {\n//   // Create an object of formData\n//   // const formData = new FormData();\n//   // // Update the formData object\n//   // formData.append(\n//   //   \"myFile\",\n//   //   this.state.selectedFile,\n//   //   this.state.selectedFile.name\n//   // );\n//   // Details of the uploaded file\n//   console.log(this.state.selectedFile);\n//   // Request made to the backend api\n//   // Send formData object\n//   // axios.post(\"https://file-upload8.p.rapidapi.com/upload\", formData, \n//   // {\n//   //   headers: {\n//   //     \"Content-Type\": \"multipart/form-data\",\n//   //     \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n//   //     \"x-rapidapi-key\": \"54b5d42c85mshe8beeaee0224812p19c856jsn693dc0130385\",\n//   //   },\n//   // }\n//   // );\n//   // axios.post(\"https://file-upload8.p.rapidapi.com/upload\", {myFile: (this.state.selectedFile,this.state.selectedFile.name)}, \n//   // {\n//   //   headers: {\n//   //     \"Content-Type\": \"multipart/form-data\",\n//   //     \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n//   //     \"x-rapidapi-key\": \"67c784071bmsh339dd9d9dfa4776p1995bdjsn2731d6524052\",\n//   //   },\n//   // }\n//   // );\n//   axios.post(\"http://localhost:3001/upload\", {myFile: (this.state.selectedFile,this.state.selectedFile.name)});\n// }\n// // File content to be displayed after\n// // file upload is complete\n// fileData = () => {\n//   if (this.state.selectedFile) {\n//     return (\n//       <div>\n//         <h5>File Details:</h5>\n//         <p>File Name: {this.state.selectedFile.name}</p>\n//         <p>File Type: {this.state.selectedFile.type}</p>\n//         <p>\n//           Last Modified:{\" \"}\n//           {this.state.selectedFile.lastModifiedDate.toDateString()}\n//         </p>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <br />\n//         <h5>Choose before Pressing the Upload button</h5>\n//       </div>\n//     );\n//   };\n// }\n// App()  {\n// App_upload= () => {\n//   const [files, setFiles] = React.useState([])\n//   const removeFile = (filename) => {\n//     setFiles(files.filter(file => file.name !== filename))\n//   }\n// }\n// App_upload= () => {\n// const [files, setFiles] = useState([])\n// const removeFile = (filename) => {\n//   setFiles(files.filter(file => file.name !== filename))\n// }\n//   return (\n//     <div className=\"App_upload\">\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//     </div>\n//   );\n// }\n// FileUpload = ({ files, setFiles, removeFile }) => {\n//   // function FileUpload ({ files, setFiles, removeFile })  {\n//       const uploadHandler = (event) => {\n//           const file = event.target.files[0];\n//           if(!file) return;\n//           file.isUploading = true;\n//           setFiles([...files, file])\n//           // upload file\n//           // const formData = new FormData();\n//           // formData.append(\n//           //     // \"newFile\",\n//           //     file.name,\n//           //     file,\n//           //     file.name\n//           // )\n//           // axios.post('http://localhost:8080/upload', formData)\n//           axios.post('/upload', {newfile: (event.target.files[0], event.target.files[0].name)}\n//           //     {\n//           //     headers: {\n//           //       \"Content-Type\": \"multipart/form-data\",\n//           //     },\n//           //   }\n//             )\n//               .then((res) => {\n//                   file.isUploading = false;\n//                   setFiles([...files, file])\n//               })\n//               .catch((err) => {\n//                   // inform the user\n//                   console.error(err)\n//                   removeFile(file.name)\n//               });\n//       }\n//     }\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.timerID=setInterval(function(){return _this2.checkModelStatus();},1000);}},{key:\"checkModelStatus\",value:function checkModelStatus(){var _this3=this;this.setState({downloading:modelDownloadInProgress()});if(!this.state.downloading){this.timerID=setInterval(function(){return _this3.checkModelStatus;},5000000);}}},{key:\"handleChange\",value:function handleChange(event){var _this4=this;inference(event.target.value).then(function(result){_this4.setState({text:event.target.value,data:result[1],latency:result[0]});});// inference(event.target.value).then( result => {\n//   this.setState({\n//     text : text => this.Dashboard.setValue(text),\n//     data:result[1],\n//     latency:result[0],\n//   });\n// });\n}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"file-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:this.uploadHandler}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(\"i\",{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPlus})}),\"Upload\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"main\",children:\"Supported files\"}),/*#__PURE__*/_jsx(\"p\",{className:\"info\",children:\"CSV, TXT, PDF, JPG, PNG\"})]})})});}}]);return App;}(React.Component);// export default TextInputArea;\nexport default App;// const Dashboard = () => {\n//   const [textValue, setTextValue] = useState(\"\");\n//   const handleChange = (e) => {\n//     const file = e.target.files[0];\n//     let reader = new FileReader();\n//     reader.onload = (e) => {\n//       const file = e.target.result;\n//       console.log(file);\n//       setTextValue(file);\n//     };\n//     reader.onerror = (e) => alert(e.target.error.name);\n//     reader.readAsText(file);\n//   };\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <input type=\"file\" name=\"input\" onChange={handleChange} />\n//       <textarea\n//         cols={30}\n//         rows={20}\n//         value={textValue}\n//         onChange={setTextValue}\n//         style={{ marginTop: 15, width: \"50%\" }}\n//       ></textarea>\n//     </div>\n//   );\n// };\n// axios\n// .post(\"https://file-upload8.p.rapidapi.com/upload\", formData,\n//   {\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\",\n//       \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n//       \"x-rapidapi-key\": \"54b5d42c85mshe8beeaee0224812p19c856jsn693dc0130385\",\n//     },\n//   }\n// )\n// .then((response) => {\n//   // handle the response\n//       console.log(response);\n//     })\n// .catch((error) => {\n//   // handle errors\n//   console.log(error);\n// });\n// state = {\n//   // Initially, no file is selected\n//   selectedFile: null\n// };\n// // On file select (from the pop up)\n// onFileChange = event => {\n//   // Update the state\n//   this.setState({ selectedFile: event.target.files[0] });\n// };\n// // On file upload (click the upload button)\n// onFileUpload = () => {\n//   // Create an object of formData\n//   const formData = new FormData();\n//   // Update the formData object\n//   formData.append(\n//     \"myFile\",\n//     this.state.selectedFile,\n//     this.state.selectedFile.name\n//   );\n//   // Details of the uploaded file\n//   console.log(this.state.selectedFile);\n//   // Request made to the backend api\n//   // Send formData object\n//   axios.post(\"api/uploadfile\", formData);\n// };\n// // File content to be displayed after\n// // file upload is complete\n// fileData = () => {\n//   if (this.state.selectedFile) {\n//     return (\n//       <div>\n//         <h2>File Details:</h2>\n//         <p>File Name: {this.state.selectedFile.name}</p>\n//         <p>File Type: {this.state.selectedFile.type}</p>\n//         <p>\n//           Last Modified:{\" \"}\n//           {this.state.selectedFile.lastModifiedDate.toDateString()}\n//         </p>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <br />\n//         <h4>Choose before Pressing the Upload button</h4>\n//       </div>\n//     );\n//   }","map":{"version":3,"names":["axios","React","Component","inference","columnNames","modelDownloadInProgress","Chart","Box","LinearProgress","useState","FileUpload","FileList","FontAwesomeIcon","faPlus","App","props","uploadHandler","event","file","target","files","isUploading","setFiles","post","newfile","name","then","res","catch","err","console","error","removeFile","state","text","data","latency","downloading","handleChange","bind","timerID","setInterval","checkModelStatus","setState","value","result"],"sources":["/Users/nguyentrungchinh/project_19/src/App.jsx"],"sourcesContent":["import './App.css';\n\nimport axios from 'axios';\n// import React, { Component } from 'react';\n\nimport React from 'react';\n\nimport { Component } from 'react';\n\n// import { useState } from 'react';\n// import Textarea from \"react-dropzone-textarea\";\n\nimport {inference} from './inference.js';\nimport {columnNames} from './inference.js';\nimport {modelDownloadInProgress} from './inference.js';\nimport Chart from \"react-google-charts\";\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { useState } from 'react';\nimport './App.scss';\nimport FileUpload from './FileUpload/FileUpload';\nimport FileList from './FileList/FileList';\n\n// import {uploadfile} from './uploadfile.js';\n\n// import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './FileUpload/FileUpload.scss'\n// import axios from 'axios'\n\n\n\n// function App() {\n//   const [files, setFiles] = useState([])\n\n//   const removeFile = (filename) => {\n//     setFiles(files.filter(file => file.name !== filename))\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n// function App() {\n//   const [files, setFiles] = useState([])\n\n//   const removeFile = (filename) => {\n//     setFiles(files.filter(file => file.name !== filename))\n//   }\n\n\n//   componentDidMount= () =>{\n//     timerID = setInterval(\n//       () => checkModelStatus(),\n//       1000\n//     );\n//   }\n\n//   checkModelStatus= () => {\n//     setState({\n//       downloading: modelDownloadInProgress(),\n//     });\n//     if (!this.state.downloading) {\n//       timerID = setInterval(\n//         () => this.checkModelStatus,\n//         5000000\n//       );\n//     };\n//   }\n\n//   handleChange= (event) => {  \n//     inference(event.target.value).then( result => {\n//       this.setState({\n//         text : event.target.value,\n//         data:result[1],\n//         latency:result[0],\n//       });\n//     });\n//   }\n\n\n\n\n//   return (\n//     <div className=\"App\">\n\n//       <div>\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//       </div>\n\n\n\n//       <header className=\"App-header\">   \n//       <em>In-Browser Transformer Inference</em>\n//       <Chart  \n//         width={'400px'}\n//         height={'200px'}\n//         chartType=\"BarChart\"\n//         data={state.data}\n//         options={{\n//           chartArea: { width: '40%'},\n//           colors: ['purple'],\n//           backgroundColor: '#282c34',\n//           legend: { \n//             textStyle: {color: 'white', fontSize: 10},\n//             labels: {fontColor:'white'}\n//           },\n//           vAxis: {\n//             textStyle: {\n//             color: 'white',\n//             fontSize: 13\n//           }\n//           },\n//           hAxis: {\n//             minValue: 5,\n//             maxValue: 50,\n//             textStyle: {\n//               color: 'white'\n//             }\n//           }\n//       }}\n//       />\n\n\n\n\n\n      \n//       {state.downloading && \n//         <div><font size=\"2\">Downloading model from CDN to browser..</font>\n//         <Box sx={{ width: '400px' }}>\n//         <LinearProgress />\n//         </Box> \n//         <p></p>\n//         </div>\n//       }\n\n\n//       <textarea rows=\"8\" cols=\"24\" className=\"App-textarea\" name=\"message\" \n//        placeholder={this.state.text} autoFocus onChange={this.handleChange}>\n//       </textarea>\n\n\n      \n//       {/* <textarea rows=\"8\" cols=\"24\" className=\"App-textarea\"  name=\"message\" \n//       //  placeholder={this.state.text} autoFocus //onChange={this.handleChange}\n//       // rows=\"8\" cols=\"24\" placeholder={this.state.text}\n\n//         // placeholder={this.state.text} autoFocus onChange={this.onFileChange}\n//         value = {this.Dashboard.value}\n//         onChange={e => this.Dashboard.setValue(e.target.value)}\n//         onDropRead={text => this.Dashboard.setValue(text)}\n\n//         textareaProps={{\n//           // cols: 24,\n//           // rows: 8,\n//           placeholder: \"Drop one text file here...\"\n//         }}\n//         // onChange={this.Dashboard}  \n//         // {this.Dashboard()} \n//         ></textarea> */}\n\n\n//        <div><font size=\"3\">Inference Latency {this.state.latency} ms</font></div>\n//       <div><font size=\"3\">GitHub Repo: <a href=\"https://github.com/jobergum/browser-ml-inference\">browser-ml-inference</a></font></div>\n//       <div><font size=\"3\">Model was trained on the <a href=\"https://ai.googleblog.com/2021/10/goemotions-dataset-for-fine-grained.html\">GoEmotions</a> dataset.</font></div>\n      \n//       </header>\n\n\n\n\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n// class TextInputArea extends React.Component {\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: 'Enter text to classify emotion, model trained on English text.',\n      data:columnNames,\n      latency:0.0,\n      downloading:modelDownloadInProgress()\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  // Dashboard = () => {\n  //   const [value , setValue] = React.useState(\"\");\n  //   const handleChange = (e) => {\n  //     const file = e.target.files[0];\n  \n  //     let reader = new FileReader();\n  \n  //     reader.onload = (e) => {\n  //       const file = e.target.result;\n  //       console.log(file);\n  //       setValue(file);\n  //     };\n  \n  //     reader.onerror = (e) => alert(e.target.error.name);\n  //     reader.readAsText(file);\n  //   };\n\n\n\n\n      // return (\n      //   <div style={{ display: \"flex\" }}>\n      //     <input type=\"file\" name=\"input\" onChange={handleChange}\n      //     // placeholder={this.state.text} autoFocus\n      //      />\n      //     <textarea\n \n      //       cols={30}\n      //       rows={20}\n      //       value={value}\n      //       onChange={setValue}\n      //       style={{ marginTop: 15, width: \"50%\" }}\n      //     ></textarea>\n      //   </div>\n      // );\n  // }\n\n\n\n\n  \n  // state = {\n  //   // Initially, no file is selected\n  //   selectedFile: null\n  // }\n  \n  // // On file select (from the pop up)\n  // onFileChange = event => {\n  //   // Update the state\n  //   this.setState({ selectedFile: event.target.files[0] });\n  // }\n  \n  // // On file upload (click the upload button)\n  // onFileUpload = () => {\n    \n  //   // Create an object of formData\n  //   // const formData = new FormData();\n  \n  //   // // Update the formData object\n  //   // formData.append(\n  //   //   \"myFile\",\n  //   //   this.state.selectedFile,\n  //   //   this.state.selectedFile.name\n  //   // );\n  \n  //   // Details of the uploaded file\n  //   console.log(this.state.selectedFile);\n  \n  //   // Request made to the backend api\n  //   // Send formData object\n\n  //   // axios.post(\"https://file-upload8.p.rapidapi.com/upload\", formData, \n    \n  //   // {\n  //   //   headers: {\n  //   //     \"Content-Type\": \"multipart/form-data\",\n  //   //     \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n  //   //     \"x-rapidapi-key\": \"54b5d42c85mshe8beeaee0224812p19c856jsn693dc0130385\",\n  //   //   },\n  //   // }\n  //   // );\n\n\n  //   // axios.post(\"https://file-upload8.p.rapidapi.com/upload\", {myFile: (this.state.selectedFile,this.state.selectedFile.name)}, \n    \n  //   // {\n  //   //   headers: {\n  //   //     \"Content-Type\": \"multipart/form-data\",\n  //   //     \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n  //   //     \"x-rapidapi-key\": \"67c784071bmsh339dd9d9dfa4776p1995bdjsn2731d6524052\",\n  //   //   },\n  //   // }\n  //   // );\n\n\n\n  //   axios.post(\"http://localhost:3001/upload\", {myFile: (this.state.selectedFile,this.state.selectedFile.name)});\n\n  // }\n  \n  // // File content to be displayed after\n  // // file upload is complete\n  // fileData = () => {\n  //   if (this.state.selectedFile) {\n  //     return (\n  //       <div>\n  //         <h5>File Details:</h5>\n  //         <p>File Name: {this.state.selectedFile.name}</p>\n  //         <p>File Type: {this.state.selectedFile.type}</p>\n  //         <p>\n  //           Last Modified:{\" \"}\n  //           {this.state.selectedFile.lastModifiedDate.toDateString()}\n  //         </p>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div>\n  //         <br />\n  //         <h5>Choose before Pressing the Upload button</h5>\n  //       </div>\n  //     );\n  //   };\n  // }\n\n\n\n\n\n  // App()  {\n  // App_upload= () => {\n  //   const [files, setFiles] = React.useState([])\n  \n  //   const removeFile = (filename) => {\n  //     setFiles(files.filter(file => file.name !== filename))\n  //   }\n\n\n  // }\n\n\n\n// App_upload= () => {\n// const [files, setFiles] = useState([])\n\n// const removeFile = (filename) => {\n//   setFiles(files.filter(file => file.name !== filename))\n// }\n\n//   return (\n//     <div className=\"App_upload\">\n//       <div className=\"title\">Upload file</div>\n//       <FileUpload files={files} setFiles={setFiles}\n//         removeFile={removeFile} />\n//       <FileList files={files} removeFile={removeFile} />\n//     </div>\n//   );\n// }\n\n\n\n\n\n// FileUpload = ({ files, setFiles, removeFile }) => {\n\n//   // function FileUpload ({ files, setFiles, removeFile })  {\n//       const uploadHandler = (event) => {\n//           const file = event.target.files[0];\n//           if(!file) return;\n//           file.isUploading = true;\n//           setFiles([...files, file])\n  \n//           // upload file\n//           // const formData = new FormData();\n//           // formData.append(\n              \n//           //     // \"newFile\",\n//           //     file.name,\n//           //     file,\n//           //     file.name\n//           // )\n  \n//           // axios.post('http://localhost:8080/upload', formData)\n//           axios.post('/upload', {newfile: (event.target.files[0], event.target.files[0].name)}\n//           //     {\n//           //     headers: {\n//           //       \"Content-Type\": \"multipart/form-data\",\n//           //     },\n//           //   }\n//             )\n//               .then((res) => {\n//                   file.isUploading = false;\n//                   setFiles([...files, file])\n//               })\n//               .catch((err) => {\n//                   // inform the user\n//                   console.error(err)\n//                   removeFile(file.name)\n//               });\n//       }\n//     }\n\n\n\n    uploadHandler = (event) => {\n      const file = event.target.files[0];\n      if(!file) return;\n      file.isUploading = true;\n      setFiles([...files, file])\n\n      // upload file\n      // const formData = new FormData();\n      // formData.append(\n          \n      //     // \"newFile\",\n      //     file.name,\n      //     file,\n      //     file.name\n      // )\n\n      // axios.post('http://localhost:8080/upload', formData)\n      axios.post('/upload', {newfile: (event.target.files[0], event.target.files[0].name)}\n      //     {\n      //     headers: {\n      //       \"Content-Type\": \"multipart/form-data\",\n      //     },\n      //   }\n        )\n          .then((res) => {\n              file.isUploading = false;\n              setFiles([...files, file])\n          })\n          .catch((err) => {\n              // inform the user\n              console.error(err)\n              removeFile(file.name)\n          });\n  }\n\n\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.checkModelStatus(),\n      1000\n    );\n  }\n\n  checkModelStatus() {\n    this.setState({\n      downloading: modelDownloadInProgress(),\n    });\n    if (!this.state.downloading) {\n      this.timerID = setInterval(\n        () => this.checkModelStatus,\n        5000000\n      );\n    }\n  }\n\n  handleChange(event) {  \n    inference(event.target.value).then( result => {\n      this.setState({\n        text : event.target.value,\n        data:result[1],\n        latency:result[0],\n      });\n    });\n\n    // inference(event.target.value).then( result => {\n    //   this.setState({\n    //     text : text => this.Dashboard.setValue(text),\n    //     data:result[1],\n    //     latency:result[0],\n    //   });\n    // });\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n    \n      {/* <div >\n\n      <div className=\"title\">Upload file</div>\n    <FileUpload files={this.App_upload.files} setFiles={this.App_upload.setFiles}\n      removeFile={this.App_upload.removeFile}  />\n    <FileList files={this.App_upload.files} removeFile={this.App_upload.removeFile} />\n\n\n    </div> */}\n\n\n\n\n    <>\n            <div className=\"file-card\">\n\n                <div className=\"file-inputs\">\n                    <input type=\"file\" onChange={this.uploadHandler} />\n                    <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n                </div>\n\n                <p className=\"main\">Supported files</p>\n                <p className=\"info\">CSV, TXT, PDF, JPG, PNG</p>\n\n            </div>\n        </>\n\n\n    </div>   \n    );\n\n\n\n\n\n  }\n\n\n}\n// export default TextInputArea;\n\nexport default App;\n\n\n\n\n\n\n\n\n// const Dashboard = () => {\n//   const [textValue, setTextValue] = useState(\"\");\n//   const handleChange = (e) => {\n//     const file = e.target.files[0];\n\n//     let reader = new FileReader();\n\n//     reader.onload = (e) => {\n//       const file = e.target.result;\n//       console.log(file);\n//       setTextValue(file);\n//     };\n\n//     reader.onerror = (e) => alert(e.target.error.name);\n//     reader.readAsText(file);\n//   };\n//   return (\n//     <div style={{ display: \"flex\" }}>\n//       <input type=\"file\" name=\"input\" onChange={handleChange} />\n//       <textarea\n//         cols={30}\n//         rows={20}\n//         value={textValue}\n//         onChange={setTextValue}\n//         style={{ marginTop: 15, width: \"50%\" }}\n//       ></textarea>\n//     </div>\n//   );\n// };\n\n\n\n// axios\n// .post(\"https://file-upload8.p.rapidapi.com/upload\", formData,\n//   {\n//     headers: {\n//       \"Content-Type\": \"multipart/form-data\",\n//       \"x-rapidapi-host\": \"file-upload8.p.rapidapi.com\",\n//       \"x-rapidapi-key\": \"54b5d42c85mshe8beeaee0224812p19c856jsn693dc0130385\",\n//     },\n//   }\n// )\n// .then((response) => {\n//   // handle the response\n//       console.log(response);\n//     })\n// .catch((error) => {\n//   // handle errors\n//   console.log(error);\n// });\n\n\n\n// state = {\n//   // Initially, no file is selected\n//   selectedFile: null\n// };\n\n// // On file select (from the pop up)\n// onFileChange = event => {\n//   // Update the state\n//   this.setState({ selectedFile: event.target.files[0] });\n// };\n\n// // On file upload (click the upload button)\n// onFileUpload = () => {\n//   // Create an object of formData\n//   const formData = new FormData();\n\n//   // Update the formData object\n//   formData.append(\n//     \"myFile\",\n//     this.state.selectedFile,\n//     this.state.selectedFile.name\n//   );\n\n//   // Details of the uploaded file\n//   console.log(this.state.selectedFile);\n\n//   // Request made to the backend api\n//   // Send formData object\n//   axios.post(\"api/uploadfile\", formData);\n// };\n\n// // File content to be displayed after\n// // file upload is complete\n// fileData = () => {\n//   if (this.state.selectedFile) {\n//     return (\n//       <div>\n//         <h2>File Details:</h2>\n//         <p>File Name: {this.state.selectedFile.name}</p>\n//         <p>File Type: {this.state.selectedFile.type}</p>\n//         <p>\n//           Last Modified:{\" \"}\n//           {this.state.selectedFile.lastModifiedDate.toDateString()}\n//         </p>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div>\n//         <br />\n//         <h4>Choose before Pressing the Upload button</h4>\n//       </div>\n//     );\n//   }\n"],"mappings":"wtBAAA,MAAO,WAAP,CAEA,MAAOA,MAAP,KAAkB,OAAlB,CACA;AAEA,MAAOC,MAAP,KAAkB,OAAlB,CAEA,OAASC,SAAT,KAA0B,OAA1B,CAEA;AACA;AAEA,OAAQC,SAAR,KAAwB,gBAAxB,CACA,OAAQC,WAAR,KAA0B,gBAA1B,CACA,OAAQC,uBAAR,KAAsC,gBAAtC,CACA,MAAOC,MAAP,KAAkB,qBAAlB,CACA,MAAOC,IAAP,KAAgB,mBAAhB,CACA,MAAOC,eAAP,KAA2B,8BAA3B,CAEA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAO,YAAP,CACA,MAAOC,WAAP,KAAuB,yBAAvB,CACA,MAAOC,SAAP,KAAqB,qBAArB,CAEA;AAEA;AACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,MAAO,8BAAP,CACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAEA;AAQA;gJACMC,I,sGACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAwNjBC,aAxNiB,CAwND,SAACC,KAAD,CAAW,CACzB,GAAMC,KAAI,CAAGD,KAAK,CA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MAAvB,EADJ,EADJ,YAFJ,GAFJ,cAYI,UAAG,SAAS,CAAC,MAAb,6BAZJ,cAaI,UAAG,SAAS,CAAC,MAAb,qCAbJ,GADR,EAfE,EADF,CA2CD,C,iBAhVeZ,KAAK,CAACC,S,EAoVxB;AAEA,cAAeY,IAAf,CASA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}