{"ast":null,"code":"var _jsxFileName = \"/Users/nguyentrungchinh/project_19/src/FileUpload/FileUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './FileUpload.scss';\nimport axios from 'axios'; // import React, { useState } from \"react\";\n\nimport { useState } from \"react\"; // import './Dashboard.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = _ref => {\n  _s();\n\n  let {\n    files,\n    setFiles,\n    removeFile\n  } = _ref;\n  const [textValue, setTextValue] = useState(\"\");\n  const [csvArray, setCsvArray] = useState([]);\n\n  const processCSV = function (str) {\n    let delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n    const headers = str.slice(0, str.indexOf('\\n')).split(delim);\n    const rows = str.slice(str.indexOf('\\n') + 1).split('\\n');\n    const newArray = rows.map(row => {\n      const values = row.split(delim);\n      const eachObject = headers.reduce((obj, header, i) => {\n        obj[header] = values[i];\n        return obj;\n      }, {});\n      return eachObject;\n    });\n    setCsvArray(newArray);\n  }; // function FileUpload ({ files, setFiles, removeFile })  {\n\n\n  const uploadHandler = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    file.isUploading = true;\n    setFiles([...files, file]); // upload file\n    // const formData = new FormData();\n    // formData.append(\n    //     // \"newFile\",\n    //     file.name,\n    //     file,\n    //     file.name\n    // )\n    // axios.post('http://localhost:8080/upload', formData)\n\n    axios.post('/upload', {\n      file: (event.target.files[0], event.target.files[0].name)\n    } //     {\n    //     headers: {\n    //       \"Content-Type\": \"multipart/form-data\",\n    //     },\n    //   }\n    ).then(res => {\n      file.isUploading = false;\n      setFiles([...files, file]);\n    }).catch(err => {\n      // inform the user\n      console.error(err);\n      removeFile(file.name);\n    });\n    let reader = new FileReader();\n\n    reader.onload = e => {\n      const file = e.target.result;\n      console.log(file); // processCSV(file);\n\n      setTextValue(file);\n    };\n\n    reader.onerror = e => alert(e.target.error.name);\n\n    reader.readAsText(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"input\",\n        onChange: uploadHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), \"Upload\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: 30,\n        rows: 20,\n        value: textValue,\n        onChange: setTextValue,\n        style: {\n          marginTop: 15,\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FileUpload, \"IQEvl4vr3PrS+kYoX/wVy5jj8Lk=\");\n\n_c = FileUpload;\nexport default FileUpload; // export let FileUpload_exp =  FileUpload\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","FontAwesomeIcon","faPlus","axios","useState","FileUpload","files","setFiles","removeFile","textValue","setTextValue","csvArray","setCsvArray","processCSV","str","delim","headers","slice","indexOf","split","rows","newArray","map","row","values","eachObject","reduce","obj","header","i","uploadHandler","event","file","target","isUploading","post","name","then","res","catch","err","console","error","reader","FileReader","onload","e","result","log","onerror","alert","readAsText","marginTop","width"],"sources":["/Users/nguyentrungchinh/project_19/src/FileUpload/FileUpload.jsx"],"sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './FileUpload.scss'\nimport axios from 'axios'\n\n// import React, { useState } from \"react\";\nimport { useState } from \"react\";\n// import './Dashboard.css';\n\n\n\n\n\nconst FileUpload = ({ files, setFiles, removeFile }) => {\n\n    const [textValue, setTextValue] = useState(\"\");\n    const [csvArray, setCsvArray] = useState([]);\n\n    const processCSV = (str, delim=',') => {\n        const headers = str.slice(0,str.indexOf('\\n')).split(delim);\n        const rows = str.slice(str.indexOf('\\n')+1).split('\\n');\n\n        const newArray = rows.map( row => {\n            const values = row.split(delim);\n            const eachObject = headers.reduce((obj, header, i) => {\n                obj[header] = values[i];\n                return obj;\n            }, {})\n            return eachObject;\n    })\n\n    setCsvArray(newArray)\n    }\n    \n\n// function FileUpload ({ files, setFiles, removeFile })  {\n    const uploadHandler = (event) => {\n        const file = event.target.files[0];\n        if(!file) return;\n        file.isUploading = true;\n        setFiles([...files, file])\n\n        // upload file\n        // const formData = new FormData();\n        // formData.append(\n            \n        //     // \"newFile\",\n        //     file.name,\n        //     file,\n        //     file.name\n        // )\n\n        // axios.post('http://localhost:8080/upload', formData)\n        axios.post('/upload', {file: (event.target.files[0], event.target.files[0].name)}\n        //     {\n        //     headers: {\n        //       \"Content-Type\": \"multipart/form-data\",\n        //     },\n        //   }\n          )\n            .then((res) => {\n                file.isUploading = false;\n                setFiles([...files, file])\n            })\n            .catch((err) => {\n                // inform the user\n                console.error(err)\n                removeFile(file.name)\n            })\n\n\n\n\n\n        let reader = new FileReader();\n    \n        reader.onload = (e) => {\n        const file = e.target.result;\n        console.log(file);\n        // processCSV(file);\n        setTextValue(file);\n        };\n    \n        reader.onerror = (e) => alert(e.target.error.name);\n        reader.readAsText(file); \n\n        \n        \n    \n\n    }\n\n    return (\n        <>\n\n            {/* <div className=\"file-card\">\n\n                <div className=\"file-inputs\">\n                \n                    <input type=\"file\" onChange={uploadHandler} />\n                    <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n                    \n\n                </div>\n\n                <p className=\"main\">Supported files</p>\n                <p className=\"info\">CSV, TXT, PDF, JPG, PNG</p>\n\n            </div> */}\n\n\n            <div className=\"Dashboard\">\n            {/* <div className=\"App\">  */}\n            {/* <div style={{ display: \"flex\" }}> */}\n            <input type=\"file\" name=\"input\" onChange={uploadHandler} />\n            <button>\n                        <i>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </i>\n                        Upload\n                    </button>\n\n            <textarea\n                cols={30}\n                rows={20}\n                value={textValue}\n                onChange={setTextValue}\n                style={{ marginTop: 15, width: \"50%\" }}\n            ></textarea> \n            {/* </div> */}\n\n\n            </div>\n\n\n\n\n        </>\n\n        \n    )\n}\n\nexport default FileUpload\n\n// export let FileUpload_exp =  FileUpload\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}